"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("cross-fetch"),t=require("debug"),r=require("xml-js"),a=require("base-64");let s;function o(t,r){return void 0!==s?s(t,r):e.fetch(t,r)}var n;exports.DAVNamespace=void 0,(n=exports.DAVNamespace||(exports.DAVNamespace={})).CALENDAR_SERVER="http://calendarserver.org/ns/",n.CALDAV_APPLE="http://apple.com/ns/ical/",n.CALDAV="urn:ietf:params:xml:ns:caldav",n.CARDDAV="urn:ietf:params:xml:ns:carddav",n.DAV="DAV:";const c={[exports.DAVNamespace.CALDAV]:"xmlns:c",[exports.DAVNamespace.CARDDAV]:"xmlns:card",[exports.DAVNamespace.CALENDAR_SERVER]:"xmlns:cs",[exports.DAVNamespace.CALDAV_APPLE]:"xmlns:ca",[exports.DAVNamespace.DAV]:"xmlns:d"};var d,i;exports.DAVNamespaceShort=void 0,(d=exports.DAVNamespaceShort||(exports.DAVNamespaceShort={})).CALDAV="c",d.CARDDAV="card",d.CALENDAR_SERVER="cs",d.CALDAV_APPLE="ca",d.DAV="d",function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(i||(i={}));const l=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},p=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},h=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},u=e=>e.reduce(((e,t)=>({...e,[c[t]]:t})),{}),f=e=>Object.entries(e).reduce(((e,[t,r])=>r?{...e,[t]:r}:e),{}),v=(e,t)=>t?{[e]:t}:{},m=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter((([e])=>!t.includes(e)))):e:{};var A=Object.freeze({__proto__:null,cleanupFalsy:f,conditionalParam:v,excludeHeaders:m,getDAVAttribute:u,urlContains:h,urlEquals:p});const D=t("tsdav:request"),y=async e=>{var t;const{url:a,init:s,convertIncoming:n=!0,parseOutgoing:c=!0,fetchOptions:d={}}=e,{headers:i={},body:p,namespace:h,method:u,attributes:v}=s,m=n?r.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...p,_attributes:v},{compact:!0,spaces:2,elementNameFn:e=>h&&!/^.+:.+/.test(e)?`${h}:${e}`:e}):p,A={...d};delete A.headers;const y=await o(a,{headers:{"Content-Type":"text/xml;charset=UTF-8",...f(i),...d.headers||{}},body:m,method:u,...A}),O=await y.text();if(!y.ok||!(null===(t=y.headers.get("content-type"))||void 0===t?void 0:t.includes("xml"))||!c)return[{href:y.url,ok:y.ok,status:y.status,statusText:y.statusText,raw:O}];const V=r.xml2js(O,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=l(e)}else r[s]=l(e)}catch(e){D(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,(e=>e[1].toUpperCase())),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(V.multistatus.response)?V.multistatus.response:[V.multistatus.response]).map((e=>{var t,r;if(!e)return{status:y.status,statusText:y.statusText,ok:y.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:V,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):y.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:y.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce(((e,t)=>({...e,...null==t?void 0:t.prop})),{})}}))},O=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return y({url:t,init:{method:"PROPFIND",headers:m(f({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{propfind:{_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),prop:r}}},fetchOptions:n})},V=async e=>{const{url:t,data:r,headers:a,headersToExclude:s,fetchOptions:n={}}=e;return o(t,{method:"PUT",body:r,headers:m(a,s),...n})},x=async e=>{const{url:t,data:r,etag:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e;return o(t,{method:"PUT",body:r,headers:m(f({"If-Match":a,...s}),n),...c})},C=async e=>{const{url:t,headers:r,etag:a,headersToExclude:s,fetchOptions:n={}}=e;return o(t,{method:"DELETE",headers:m(f({"If-Match":a,...r}),s),...n})};var g=Object.freeze({__proto__:null,createObject:V,davRequest:y,deleteObject:C,propfind:O,updateObject:x});function b(e,t){const r=e=>t.every((t=>e[t]));return Array.isArray(e)?e.every((e=>r(e))):r(e)}const w=(e,t)=>t.reduce(((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`),""),S=t("tsdav:collection"),N=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=exports.DAVNamespaceShort.DAV,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=await y({url:t,init:{method:"REPORT",headers:m(f({depth:a,...o}),n),namespace:s,body:r},fetchOptions:c});return 1!==d.length||d[0].raw?d:[]},$=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return y({url:t,init:{method:"MKCOL",headers:m(f({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0},fetchOptions:n})},E=async e=>{var t,r,a,s,o;const{collection:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return null!==(o=null===(s=null===(a=null===(r=null===(t=(await O({url:n.url,props:{[`${exports.DAVNamespaceShort.DAV}:supported-report-set`]:{}},depth:"0",headers:m(c,d),fetchOptions:i}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map((e=>Object.keys(e.report)[0])))&&void 0!==o?o:[]},T=async e=>{var t,r,a;const{collection:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=(await O({url:s.url,props:{[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:m(o,n),fetchOptions:c})).filter((e=>h(s.url,e.href)))[0];if(!d)throw new Error("Collection does not exist on server");return{isDirty:`${s.ctag}`!=`${null===(t=d.props)||void 0===t?void 0:t.getctag}`,newCtag:null===(a=null===(r=d.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},k=e=>{const{url:t,props:r,headers:a,syncLevel:s,syncToken:o,headersToExclude:n,fetchOptions:c}=e;return y({url:t,init:{method:"REPORT",namespace:exports.DAVNamespaceShort.DAV,headers:m({...a},n),body:{"sync-collection":{_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),"sync-level":s,"sync-token":o,[`${exports.DAVNamespaceShort.DAV}:prop`]:r}}},fetchOptions:c})},U=async e=>{var t,r,a,s,o,n,c,d,i,l,p;const{collection:u,method:f,headers:v,headersToExclude:A,account:D,detailedResult:y,fetchOptions:O={}}=e,V=["accountType","homeUrl"];if(!D||!b(D,V)){if(!D)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${w(D,V)} before smartCollectionSync`)}const x=null!=f?f:(null===(t=u.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(S(`smart collection sync with type ${D.accountType} and method ${x}`),"webdav"===x){const e=await k({url:u.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===D.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===D.accountType?"calendar-data":"address-data"}`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{}},syncLevel:1,syncToken:u.syncToken,headers:m(v,A),fetchOptions:O}),t=e.filter((e=>{var t;const r="caldav"===D.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r})),i=t.filter((e=>404!==e.status)).map((e=>e.href)),l=t.filter((e=>404===e.status)).map((e=>e.href)),p=(i.length&&null!==(a=await(null===(r=null==u?void 0:u.objectMultiGet)||void 0===r?void 0:r.call(u,{url:u.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${"caldav"===D.accountType?exports.DAVNamespaceShort.CALDAV:exports.DAVNamespaceShort.CARDDAV}:${"caldav"===D.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:i,depth:"1",headers:m(v,A),fetchOptions:O})))&&void 0!==a?a:[]).map((e=>{var t,r,a,s,o,n,c,d,i,l;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==D?void 0:D.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(i=null===(d=null===(c=e.props)||void 0===c?void 0:c.addressData)||void 0===d?void 0:d._cdata)&&void 0!==i?i:null===(l=e.props)||void 0===l?void 0:l.addressData}})),f=null!==(s=u.objects)&&void 0!==s?s:[],V=p.filter((e=>f.every((t=>!h(t.url,e.url))))),x=f.reduce(((e,t)=>{const r=p.find((e=>h(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),C=l.map((e=>({url:e,etag:""}))),g=f.filter((e=>p.some((t=>h(e.url,t.url)&&t.etag===e.etag))));return{...u,objects:y?{created:V,updated:x,deleted:C}:[...g,...V,...x],syncToken:null!==(d=null===(c=null===(n=null===(o=e[0])||void 0===o?void 0:o.raw)||void 0===n?void 0:n.multistatus)||void 0===c?void 0:c.syncToken)&&void 0!==d?d:u.syncToken}}if("basic"===x){const{isDirty:e,newCtag:t}=await T({collection:u,headers:m(v,A),fetchOptions:O}),r=null!==(i=u.objects)&&void 0!==i?i:[],a=null!==(p=await(null===(l=u.fetchObjects)||void 0===l?void 0:l.call(u,{collection:u,headers:m(v,A),fetchOptions:O})))&&void 0!==p?p:[],s=a.filter((e=>r.every((t=>!h(t.url,e.url))))),o=r.reduce(((e,t)=>{const r=a.find((e=>h(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),n=r.filter((e=>a.every((t=>!h(t.url,e.url))))),c=r.filter((e=>a.some((t=>h(e.url,t.url)&&t.etag===e.etag))));if(e)return{...u,objects:y?{created:s,updated:o,deleted:n}:[...c,...s,...o],ctag:t}}return y?{...u,objects:{created:[],updated:[],deleted:[]}}:u};var _=Object.freeze({__proto__:null,collectionQuery:N,isCollectionDirty:T,makeCollection:$,smartCollectionSync:U,supportedReportSet:E,syncCollection:k});const R=t("tsdav:addressBook"),j=async e=>{const{url:t,props:r,filters:a,depth:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;return N({url:t,body:{"addressbook-query":f({_attributes:u([exports.DAVNamespace.CARDDAV,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:null!=a?a:{"prop-filter":{_attributes:{name:"FN"}}}})},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:m(o,n),fetchOptions:c})},L=async e=>{const{url:t,props:r,objectUrls:a,depth:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;return N({url:t,body:{"addressbook-multiget":f({_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CARDDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a})},defaultNamespace:exports.DAVNamespaceShort.CARDDAV,depth:s,headers:m(o,n),fetchOptions:c})},H=async e=>{const{account:t,headers:r,props:a,headersToExclude:s,fetchOptions:o={}}=null!=e?e:{},n=["homeUrl","rootUrl"];if(!t||!b(t,n)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${w(t,n)} before fetchAddressBooks`)}const c=await O({url:t.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:m(r,s),fetchOptions:o});return Promise.all(c.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")})).map((e=>{var r,a,s,o,n,c,d,i,l;const p=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return R(`Found address book named ${"string"==typeof p?p:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(c=t.rootUrl)&&void 0!==c?c:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,displayName:"string"==typeof p?p:"",resourcetype:Object.keys(null===(i=e.props)||void 0===i?void 0:i.resourcetype),syncToken:null===(l=e.props)||void 0===l?void 0:l.syncToken}})).map((async e=>({...e,reports:await E({collection:e,headers:m(r,s),fetchOptions:o})}))))},P=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:o=e=>e,useMultiGet:n=!0,fetchOptions:c={}}=e;R(`Fetching vcards from ${null==t?void 0:t.url}`);const d=["url"];if(!t||!b(t,d)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${w(t,d)} before fetchVCards`)}const i=(null!=a?a:(await j({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{}},depth:"1",headers:m(r,s),fetchOptions:c})).map((e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(o).map((e=>new URL(e).pathname));let l=[];return i.length>0&&(l=n?await L({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},objectUrls:i,depth:"1",headers:m(r,s),fetchOptions:c}):await j({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CARDDAV}:address-data`]:{}},depth:"1",headers:m(r,s),fetchOptions:c})),l.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.addressData}}))},B=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return V({url:new URL(a,t.url).href,data:r,headers:m({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},F=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return x({url:t.url,data:t.data,etag:t.etag,headers:m({"content-type":"text/vcard; charset=utf-8",...r},a),fetchOptions:s})},M=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return C({url:t.url,etag:t.etag,headers:m(r,a),fetchOptions:s})};var I=Object.freeze({__proto__:null,addressBookMultiGet:L,addressBookQuery:j,createVCard:B,deleteVCard:M,fetchAddressBooks:H,fetchVCards:P,updateVCard:F});const z=t("tsdav:calendar"),Z=async e=>{var t,r,a;const{account:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,d=["principalUrl","rootUrl"];if(!b(s,d))throw new Error(`account must have ${w(s,d)} before fetchUserAddresses`);z(`Fetch user addresses from ${s.principalUrl}`);const i=(await O({url:s.principalUrl,props:{[`${exports.DAVNamespaceShort.CALDAV}:calendar-user-address-set`]:{}},depth:"0",headers:m(o,n),fetchOptions:c})).find((e=>h(s.principalUrl,e.href)));if(!i||!i.ok)throw new Error("cannot find calendarUserAddresses");const l=(null===(a=null===(r=null===(t=null==i?void 0:i.props)||void 0===t?void 0:t.calendarUserAddressSet)||void 0===r?void 0:r.href)||void 0===a?void 0:a.filter(Boolean))||[];return z(`Fetched calendar user addresses ${l}`),l},q=async e=>{const{url:t,props:r,filters:a,timezone:s,depth:o,headers:n,headersToExclude:c,fetchOptions:d={}}=e;return N({url:t,body:{"calendar-query":f({_attributes:u([exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALENDAR_SERVER,exports.DAVNamespace.CALDAV_APPLE,exports.DAVNamespace.DAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,filter:a,timezone:s})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:o,headers:m(n,c),fetchOptions:d})},Q=async e=>{const{url:t,props:r,objectUrls:a,filters:s,timezone:o,depth:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e;return N({url:t,body:{"calendar-multiget":f({_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.DAV}:prop`]:r,[`${exports.DAVNamespaceShort.DAV}:href`]:a,filter:s,timezone:o})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:n,headers:m(c,d),fetchOptions:i})},G=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return y({url:t,init:{method:"MKCALENDAR",headers:m(f({depth:a,...s}),o),namespace:exports.DAVNamespaceShort.DAV,body:{[`${exports.DAVNamespaceShort.CALDAV}:mkcalendar`]:{_attributes:u([exports.DAVNamespace.DAV,exports.DAVNamespace.CALDAV,exports.DAVNamespace.CALDAV_APPLE]),set:{prop:r}}}},fetchOptions:n})},J=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:o,fetchOptions:n={}}=null!=e?e:{},c=["homeUrl","rootUrl"];if(!r||!b(r,c)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${w(r,c)} before fetchCalendars`)}const d=await O({url:r.homeUrl,props:null!=a?a:{[`${exports.DAVNamespaceShort.CALDAV}:calendar-description`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-timezone`]:{},[`${exports.DAVNamespaceShort.DAV}:displayname`]:{},[`${exports.DAVNamespaceShort.CALDAV_APPLE}:calendar-color`]:{},[`${exports.DAVNamespaceShort.CALENDAR_SERVER}:getctag`]:{},[`${exports.DAVNamespaceShort.DAV}:resourcetype`]:{},[`${exports.DAVNamespaceShort.CALDAV}:supported-calendar-component-set`]:{},[`${exports.DAVNamespaceShort.DAV}:sync-token`]:{}},depth:"1",headers:m(t,o),fetchOptions:n});return Promise.all(d.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")})).filter((e=>{var t,r,a,s,o,n;return(Array.isArray(null===(r=null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet)||void 0===r?void 0:r.comp)?null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.supportedCalendarComponentSet)||void 0===o?void 0:o.comp)||void 0===n?void 0:n._attributes.name]).some((e=>Object.values(i).includes(e)))})).map((e=>{var t,a,o,n,c,d,i,l,p,h,u,f,m,A,D,y;const O=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,V=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof O?O:"",timezone:"string"==typeof V?V:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,calendarColor:null===(d=e.props)||void 0===d?void 0:d.calendarColor,displayName:null!==(l=null===(i=e.props)||void 0===i?void 0:i.displayname._cdata)&&void 0!==l?l:null===(p=e.props)||void 0===p?void 0:p.displayname,components:Array.isArray(null===(h=e.props)||void 0===h?void 0:h.supportedCalendarComponentSet.comp)?null===(u=e.props)||void 0===u?void 0:u.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(m=null===(f=e.props)||void 0===f?void 0:f.supportedCalendarComponentSet.comp)||void 0===m?void 0:m._attributes.name],resourcetype:Object.keys(null===(A=e.props)||void 0===A?void 0:A.resourcetype),syncToken:null===(D=e.props)||void 0===D?void 0:D.syncToken,...v("projectedProps",Object.fromEntries(Object.entries(null!==(y=e.props)&&void 0!==y?y:{}).filter((([e])=>null==s?void 0:s[e]))))}})).map((async e=>({...e,reports:await E({collection:e,headers:m(t,o),fetchOptions:n})}))))},K=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:o,expand:n,urlFilter:c=e=>Boolean(null==e?void 0:e.includes(".ics")),useMultiGet:d=!0,headersToExclude:i,fetchOptions:l={}}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}z(`Fetching calendar objects from ${null==t?void 0:t.url}`);const p=["url"];if(!t||!b(t,p)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${w(t,p)} before fetchCalendarObjects`)}const h=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],u=(null!=r?r:(await q({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:h,depth:"1",headers:m(o,i),fetchOptions:l})).map((e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(c).map((e=>new URL(e).pathname));let f=[];return u.length>0&&(f=!d||n?await q({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:h,depth:"1",headers:m(o,i),fetchOptions:l}):await Q({url:t.url,props:{[`${exports.DAVNamespaceShort.DAV}:getetag`]:{},[`${exports.DAVNamespaceShort.CALDAV}:calendar-data`]:{...n&&s?{[`${exports.DAVNamespaceShort.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:u,depth:"1",headers:m(o,i),fetchOptions:l})),f.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.calendarData}}))},W=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return V({url:new URL(a,t.url).href,data:r,headers:m({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},Y=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return x({url:t.url,data:t.data,etag:t.etag,headers:m({"content-type":"text/calendar; charset=utf-8",...r},a),fetchOptions:s})},X=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return C({url:t.url,etag:t.etag,headers:m(r,a),fetchOptions:s})},ee=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],i=await J({account:a,headers:m(o,n),fetchOptions:c}),l=i.filter((e=>d.every((t=>!h(t.url,e.url)))));z(`new calendars: ${l.map((e=>e.displayName))}`);const p=d.reduce(((e,t)=>{const r=i.find((e=>h(e.url,t.url)));return r&&(r.syncToken&&`${r.syncToken}`!=`${t.syncToken}`||r.ctag&&`${r.ctag}`!=`${t.ctag}`)?[...e,r]:e}),[]);z(`updated calendars: ${p.map((e=>e.displayName))}`);const u=await Promise.all(p.map((async e=>await U({collection:{...e,objectMultiGet:Q},method:"webdav",headers:m(o,n),account:a,fetchOptions:c})))),f=d.filter((e=>i.every((t=>!h(t.url,e.url)))));z(`deleted calendars: ${f.map((e=>e.displayName))}`);const v=d.filter((e=>i.some((t=>h(t.url,e.url)&&(t.syncToken&&`${t.syncToken}`!=`${e.syncToken}`||t.ctag&&`${t.ctag}`!=`${e.ctag}`)))));return s?{created:l,updated:p,deleted:f}:[...v,...l,...u]},te=async e=>{const{url:t,timeRange:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await N({url:t,body:{"free-busy-query":f({_attributes:u([exports.DAVNamespace.CALDAV]),[`${exports.DAVNamespaceShort.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:exports.DAVNamespaceShort.CALDAV,depth:a,headers:m(s,o),fetchOptions:n}))[0]};var re=Object.freeze({__proto__:null,calendarMultiGet:Q,calendarQuery:q,createCalendarObject:W,deleteCalendarObject:X,fetchCalendarObjects:K,fetchCalendarUserAddresses:Z,fetchCalendars:J,freeBusyQuery:te,makeCalendar:G,syncCalendars:ee,updateCalendarObject:Y});const ae=t("tsdav:account"),se=async e=>{var t,r;ae("Service discovery...");const{account:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e,d=new URL(a.serverUrl),i=new URL(`/.well-known/${a.accountType}`,d);i.protocol=null!==(t=d.protocol)&&void 0!==t?t:"http";try{const e=await o(i.href,{headers:m(s,n),method:"PROPFIND",redirect:"manual",...c});if(e.status>=300&&e.status<400){const t=e.headers.get("Location");if("string"==typeof t&&t.length){ae(`Service discovery redirected to ${t}`);const e=new URL(t,d);return e.hostname===i.hostname&&i.port&&!e.port&&(e.port=i.port),e.protocol=null!==(r=d.protocol)&&void 0!==r?r:"http",e.href}}}catch(e){ae(`Service discovery failed: ${e.stack}`)}return d.href},oe=async e=>{var t,r,a,s,o;const{account:n,headers:c,headersToExclude:d,fetchOptions:i={}}=e,l=["rootUrl"];if(!b(n,l))throw new Error(`account must have ${w(n,l)} before fetchPrincipalUrl`);ae(`Fetching principal url from path ${n.rootUrl}`);const[p]=await O({url:n.rootUrl,props:{[`${exports.DAVNamespaceShort.DAV}:current-user-principal`]:{}},depth:"0",headers:m(c,d),fetchOptions:i});if(!p.ok&&(ae(`Fetch principal url failed: ${p.statusText}`),401===p.status))throw new Error("Invalid credentials");return ae(`Fetched principal url ${null===(r=null===(t=p.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(o=null===(s=null===(a=p.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==o?o:"",n.rootUrl).href},ne=async e=>{var t,r;const{account:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e,c=["principalUrl","rootUrl"];if(!b(a,c))throw new Error(`account must have ${w(a,c)} before fetchHomeUrl`);ae(`Fetch home url from ${a.principalUrl}`);const d=await O({url:a.principalUrl,props:"caldav"===a.accountType?{[`${exports.DAVNamespaceShort.CALDAV}:calendar-home-set`]:{}}:{[`${exports.DAVNamespaceShort.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:m(s,o),fetchOptions:n}),i=d.find((e=>h(a.principalUrl,e.href)));if(!i||!i.ok)throw ae(`Fetch home url failed with status ${null==i?void 0:i.statusText} and error ${JSON.stringify(d.map((e=>e.error)))}`),new Error("cannot find homeUrl");const l=new URL("caldav"===a.accountType?null===(t=null==i?void 0:i.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==i?void 0:i.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return ae(`Fetched home url ${l}`),l},ce=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o,fetchOptions:n={}}=e,c={...t};return c.rootUrl=await se({account:t,headers:m(r,o),fetchOptions:n}),c.principalUrl=await oe({account:c,headers:m(r,o),fetchOptions:n}),c.homeUrl=await ne({account:c,headers:m(r,o),fetchOptions:n}),(a||s)&&("caldav"===t.accountType?c.calendars=await J({headers:m(r,o),account:c,fetchOptions:n}):"carddav"===t.accountType&&(c.addressBooks=await H({headers:m(r,o),account:c,fetchOptions:n}))),s&&("caldav"===t.accountType&&c.calendars?c.calendars=await Promise.all(c.calendars.map((async e=>({...e,objects:await K({calendar:e,headers:m(r,o),fetchOptions:n})})))):"carddav"===t.accountType&&c.addressBooks&&(c.addressBooks=await Promise.all(c.addressBooks.map((async e=>({...e,objects:await P({addressBook:e,headers:m(r,o),fetchOptions:n})})))))),c};var de=Object.freeze({__proto__:null,createAccount:ce,fetchHomeUrl:ne,fetchPrincipalUrl:oe,serviceDiscovery:se});const ie=t("tsdav:authHelper"),le=(e,t)=>(...r)=>e({...t,...r[0]}),pe=e=>(ie(`Basic auth token generated: ${a.encode(`${e.username}:${e.password}`)}`),{authorization:`Basic ${a.encode(`${e.username}:${e.password}`)}`}),he=async(e,t)=>{const r=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!b(e,r))throw new Error(`Oauth credentials missing: ${w(e,r)}`);const a=new URLSearchParams({grant_type:"authorization_code",code:e.authorizationCode,redirect_uri:e.redirectUrl,client_id:e.clientId,client_secret:e.clientSecret});ie(e.tokenUrl),ie(a.toString());const s=await o(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"content-length":`${a.toString().length}`,"content-type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return ie(`Fetch Oauth tokens failed: ${await s.text()}`),{}},ue=async(e,t)=>{const r=["refreshToken","clientId","clientSecret","tokenUrl"];if(!b(e,r))throw new Error(`Oauth credentials missing: ${w(e,r)}`);const a=new URLSearchParams({client_id:e.clientId,client_secret:e.clientSecret,refresh_token:e.refreshToken,grant_type:"refresh_token"}),s=await o(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return ie(`Refresh access token failed: ${await s.text()}`),{}},fe=async(e,t)=>{var r;ie("Fetching oauth headers");let a={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(r=e.expiration)&&void 0!==r?r:0))&&(a=await ue(e,t)):a=await he(e,t),ie(`Oauth tokens fetched: ${a.access_token}`),{tokens:a,headers:{authorization:`Bearer ${a.access_token}`}}};var ve=Object.freeze({__proto__:null,defaultParam:le,fetchOauthTokens:he,getBasicAuthHeaders:pe,getOauthHeaders:fe,refreshAccessToken:ue});const me=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:o,defaultAccountType:n,authFunction:c,overrideFetch:d}=e;void 0!==d&&(s=d);let i={};switch(o){case"Basic":i=pe(a);break;case"Oauth":i=(await fe(a)).headers;break;case"Digest":i={Authorization:`Digest ${a.digestString}`};break;case"Custom":i=null!==(t=await(null==c?void 0:c(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const l=n?await ce({account:{serverUrl:r,credentials:a,accountType:n},headers:i}):void 0,p=le(V,{url:r,headers:i}),h=le(x,{headers:i,url:r}),u=le(C,{headers:i,url:r}),f=le(O,{headers:i}),v=le(N,{headers:i}),m=le($,{headers:i}),A=le(k,{headers:i}),D=le(E,{headers:i}),g=le(T,{headers:i}),b=le(U,{headers:i,account:l}),w=le(q,{headers:i}),S=le(Q,{headers:i}),_=le(G,{headers:i}),R=le(J,{headers:i,account:l}),I=le(Z,{headers:i,account:l}),z=le(K,{headers:i}),te=le(W,{headers:i}),re=le(Y,{headers:i}),ae=le(X,{headers:i}),se=le(ee,{account:l,headers:i}),oe=le(j,{headers:i}),ne=le(L,{headers:i});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...i,...a}}})},propfind:f,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return ce({account:{serverUrl:r,credentials:a,...t},headers:{...i,...s},loadCollections:o,loadObjects:n})},createObject:p,updateObject:h,deleteObject:u,calendarQuery:w,addressBookQuery:oe,collectionQuery:v,makeCollection:m,calendarMultiGet:S,makeCalendar:_,syncCollection:A,supportedReportSet:D,isCollectionDirty:g,smartCollectionSync:b,fetchCalendars:R,fetchCalendarUserAddresses:I,fetchCalendarObjects:z,createCalendarObject:te,updateCalendarObject:re,deleteCalendarObject:ae,syncCalendars:se,fetchAddressBooks:le(H,{account:l,headers:i}),addressBookMultiGet:ne,fetchVCards:le(P,{headers:i}),createVCard:le(B,{headers:i}),updateVCard:le(F,{headers:i}),deleteVCard:le(M,{headers:i})}};class Ae{constructor(e){var t,r,a;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav",this.authFunction=e.authFunction,this.fetchOptions=null!==(a=e.fetchOptions)&&void 0!==a?a:{}}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=pe(this.credentials);break;case"Oauth":this.authHeaders=(await fe(this.credentials,this.fetchOptions)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await ce({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders,fetchOptions:this.fetchOptions}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return y({...r,init:{...s,headers:{...this.authHeaders,...a}},fetchOptions:this.fetchOptions})}async createObject(...e){return le(V,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateObject(...e){return le(x,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteObject(...e){return le(C,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async propfind(...e){return le(O,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s,fetchOptions:o}=e;return ce({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s,fetchOptions:null!=o?o:this.fetchOptions})}async collectionQuery(...e){return le(N,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCollection(...e){return le($,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCollection(...e){return le(k,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async supportedReportSet(...e){return le(E,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async isCollectionDirty(...e){return le(T,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async smartCollectionSync(...e){return le(U,{headers:this.authHeaders,fetchOptions:this.fetchOptions,account:this.account})(e[0])}async calendarQuery(...e){return le(q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCalendar(...e){return le(G,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async calendarMultiGet(...e){return le(Q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchCalendars(...e){return le(J,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarUserAddresses(...e){return le(Z,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return le(K,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createCalendarObject(...e){return le(W,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateCalendarObject(...e){return le(Y,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteCalendarObject(...e){return le(X,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCalendars(...e){return le(ee,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(e[0])}async addressBookQuery(...e){return le(j,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async addressBookMultiGet(...e){return le(L,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchAddressBooks(...e){return le(H,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchVCards(...e){return le(P,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createVCard(...e){return le(B,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateVCard(...e){return le(F,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteVCard(...e){return le(M,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}}var De=Object.freeze({__proto__:null,DAVClient:Ae,createDAVClient:me}),ye={DAVNamespace:exports.DAVNamespace,DAVNamespaceShort:exports.DAVNamespaceShort,DAVAttributeMap:c,...De,...g,..._,...de,...I,...re,...ve,...A};exports.DAVAttributeMap=c,exports.DAVClient=Ae,exports.addressBookMultiGet=L,exports.addressBookQuery=j,exports.calendarMultiGet=Q,exports.calendarQuery=q,exports.cleanupFalsy=f,exports.collectionQuery=N,exports.createAccount=ce,exports.createCalendarObject=W,exports.createDAVClient=me,exports.createObject=V,exports.createVCard=B,exports.davRequest=y,exports.default=ye,exports.deleteCalendarObject=X,exports.deleteObject=C,exports.deleteVCard=M,exports.fetchAddressBooks=H,exports.fetchCalendarObjects=K,exports.fetchCalendarUserAddresses=Z,exports.fetchCalendars=J,exports.fetchOauthTokens=he,exports.fetchVCards=P,exports.freeBusyQuery=te,exports.getBasicAuthHeaders=pe,exports.getDAVAttribute=u,exports.getOauthHeaders=fe,exports.isCollectionDirty=T,exports.makeCalendar=G,exports.propfind=O,exports.refreshAccessToken=ue,exports.smartCollectionSync=U,exports.supportedReportSet=E,exports.syncCalendars=ee,exports.syncCollection=k,exports.updateCalendarObject=Y,exports.updateObject=x,exports.updateVCard=F,exports.urlContains=h,exports.urlEquals=p;
