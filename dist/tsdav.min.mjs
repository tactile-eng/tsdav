import{fetch as e}from"cross-fetch";import t from"debug";import r from"xml-js";import{encode as a}from"base-64";let s;function o(t,r){return void 0!==s?s(t,r):e(t,r)}var n;!function(e){e.CALENDAR_SERVER="http://calendarserver.org/ns/",e.CALDAV_APPLE="http://apple.com/ns/ical/",e.CALDAV="urn:ietf:params:xml:ns:caldav",e.CARDDAV="urn:ietf:params:xml:ns:carddav",e.DAV="DAV:"}(n||(n={}));const c={[n.CALDAV]:"xmlns:c",[n.CARDDAV]:"xmlns:card",[n.CALENDAR_SERVER]:"xmlns:cs",[n.CALDAV_APPLE]:"xmlns:ca",[n.DAV]:"xmlns:d"};var d,i;!function(e){e.CALDAV="c",e.CARDDAV="card",e.CALENDAR_SERVER="cs",e.CALDAV_APPLE="ca",e.DAV="d"}(d||(d={})),function(e){e.VEVENT="VEVENT",e.VTODO="VTODO",e.VJOURNAL="VJOURNAL",e.VFREEBUSY="VFREEBUSY",e.VTIMEZONE="VTIMEZONE",e.VALARM="VALARM"}(i||(i={}));const l=e=>{const t=Number(e);if(!Number.isNaN(t))return t;const r=e.toLowerCase();return"true"===r||"false"!==r&&e},u=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim();if(Math.abs(r.length-a.length)>1)return!1;const s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},h=(e,t)=>{if(!e&&!t)return!0;if(!e||!t)return!1;const r=e.trim(),a=t.trim(),s="/"===r.slice(-1)?r.slice(0,-1):r,o="/"===a.slice(-1)?a.slice(0,-1):a;return e.includes(o)||t.includes(s)},p=e=>e.reduce(((e,t)=>({...e,[c[t]]:t})),{}),f=e=>Object.entries(e).reduce(((e,[t,r])=>r?{...e,[t]:r}:e),{}),v=(e,t)=>t?{[e]:t}:{},y=(e,t)=>e?t&&0!==t.length?Object.fromEntries(Object.entries(e).filter((([e])=>!t.includes(e)))):e:{};var O=Object.freeze({__proto__:null,cleanupFalsy:f,conditionalParam:v,excludeHeaders:y,getDAVAttribute:p,urlContains:h,urlEquals:u});const m=t("tsdav:request"),A=async e=>{var t;const{url:a,init:s,convertIncoming:n=!0,parseOutgoing:c=!0,fetchOptions:d={}}=e,{headers:i={},body:u,namespace:h,method:p,attributes:v}=s,y=n?r.js2xml({_declaration:{_attributes:{version:"1.0",encoding:"utf-8"}},...u,_attributes:v},{compact:!0,spaces:2,elementNameFn:e=>h&&!/^.+:.+/.test(e)?`${h}:${e}`:e}):u,O={...d};delete O.headers;const A=await o(a,{headers:{"Content-Type":"text/xml;charset=UTF-8",...f(i),...d.headers||{}},body:y,method:p,...O}),g=await A.text();if(!A.ok||!(null===(t=A.headers.get("content-type"))||void 0===t?void 0:t.includes("xml"))||!c)return[{href:A.url,ok:A.ok,status:A.status,statusText:A.statusText,raw:g}];const w=r.xml2js(g,{compact:!0,trim:!0,textFn:(e,t)=>{try{const r=t._parent,a=Object.keys(r),s=a[a.length-1],o=r[s];if(o.length>0){o[o.length-1]=l(e)}else r[s]=l(e)}catch(e){m(e.stack)}},elementNameFn:e=>e.replace(/^.+:/,"").replace(/([-_]\w)/g,(e=>e[1].toUpperCase())),attributesFn:e=>{const t={...e};return delete t.xmlns,t},ignoreDeclaration:!0});return(Array.isArray(w.multistatus.response)?w.multistatus.response:[w.multistatus.response]).map((e=>{var t,r;if(!e)return{status:A.status,statusText:A.statusText,ok:A.ok};const a=/^\S+\s(?<status>\d+)\s(?<statusText>.+)$/.exec(e.status);return{raw:w,href:e.href,status:(null==a?void 0:a.groups)?Number.parseInt(null==a?void 0:a.groups.status,10):A.status,statusText:null!==(r=null===(t=null==a?void 0:a.groups)||void 0===t?void 0:t.statusText)&&void 0!==r?r:A.statusText,ok:!e.error,error:e.error,responsedescription:e.responsedescription,props:(Array.isArray(e.propstat)?e.propstat:[e.propstat]).reduce(((e,t)=>({...e,...null==t?void 0:t.prop})),{})}}))},g=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:c={}}=e;return A({url:t,init:{method:"PROPFIND",headers:y(f({depth:a,...s}),o),namespace:d.DAV,body:{propfind:{_attributes:p([n.CALDAV,n.CALDAV_APPLE,n.CALENDAR_SERVER,n.CARDDAV,n.DAV]),prop:r}}},fetchOptions:c})},w=async e=>{const{url:t,data:r,headers:a,headersToExclude:s,fetchOptions:n={}}=e;return o(t,{method:"PUT",body:r,headers:y(a,s),...n})},C=async e=>{const{url:t,data:r,etag:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e;return o(t,{method:"PUT",body:r,headers:y(f({"If-Match":a,...s}),n),...c})},D=async e=>{const{url:t,headers:r,etag:a,headersToExclude:s,fetchOptions:n={}}=e;return o(t,{method:"DELETE",headers:y(f({"If-Match":a,...r}),s),...n})};var b=Object.freeze({__proto__:null,createObject:w,davRequest:A,deleteObject:D,propfind:g,updateObject:C});function V(e,t){const r=e=>t.every((t=>e[t]));return Array.isArray(e)?e.every((e=>r(e))):r(e)}const $=(e,t)=>t.reduce(((t,r)=>e[r]?t:`${t.length?`${t},`:""}${r.toString()}`),""),E=t("tsdav:collection"),T=async e=>{const{url:t,body:r,depth:a,defaultNamespace:s=d.DAV,headers:o,headersToExclude:n,fetchOptions:c={}}=e,i=await A({url:t,init:{method:"REPORT",headers:y(f({depth:a,...o}),n),namespace:s,body:r},fetchOptions:c});return 1!==i.length||i[0].raw?i:[]},k=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return A({url:t,init:{method:"MKCOL",headers:y(f({depth:a,...s}),o),namespace:d.DAV,body:r?{mkcol:{set:{prop:r}}}:void 0},fetchOptions:n})},U=async e=>{var t,r,a,s,o;const{collection:n,headers:c,headersToExclude:i,fetchOptions:l={}}=e;return null!==(o=null===(s=null===(a=null===(r=null===(t=(await g({url:n.url,props:{[`${d.DAV}:supported-report-set`]:{}},depth:"0",headers:y(c,i),fetchOptions:l}))[0])||void 0===t?void 0:t.props)||void 0===r?void 0:r.supportedReportSet)||void 0===a?void 0:a.supportedReport)||void 0===s?void 0:s.map((e=>Object.keys(e.report)[0])))&&void 0!==o?o:[]},_=async e=>{var t,r,a;const{collection:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,i=(await g({url:s.url,props:{[`${d.CALENDAR_SERVER}:getctag`]:{}},depth:"0",headers:y(o,n),fetchOptions:c})).filter((e=>h(s.url,e.href)))[0];if(!i)throw new Error("Collection does not exist on server");return{isDirty:`${s.ctag}`!=`${null===(t=i.props)||void 0===t?void 0:t.getctag}`,newCtag:null===(a=null===(r=i.props)||void 0===r?void 0:r.getctag)||void 0===a?void 0:a.toString()}},R=e=>{const{url:t,props:r,headers:a,syncLevel:s,syncToken:o,headersToExclude:c,fetchOptions:i}=e;return A({url:t,init:{method:"REPORT",namespace:d.DAV,headers:y({...a},c),body:{"sync-collection":{_attributes:p([n.CALDAV,n.CARDDAV,n.DAV]),"sync-level":s,"sync-token":o,[`${d.DAV}:prop`]:r}}},fetchOptions:i})},L=async e=>{var t,r,a,s,o,n,c,i,l,u,p;const{collection:f,method:v,headers:O,headersToExclude:m,account:A,detailedResult:g,fetchOptions:w={}}=e,C=["accountType","homeUrl"];if(!A||!V(A,C)){if(!A)throw new Error("no account for smartCollectionSync");throw new Error(`account must have ${$(A,C)} before smartCollectionSync`)}const D=null!=v?v:(null===(t=f.reports)||void 0===t?void 0:t.includes("syncCollection"))?"webdav":"basic";if(E(`smart collection sync with type ${A.accountType} and method ${D}`),"webdav"===D){const e=await R({url:f.url,props:{[`${d.DAV}:getetag`]:{},[`${"caldav"===A.accountType?d.CALDAV:d.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{},[`${d.DAV}:displayname`]:{}},syncLevel:1,syncToken:f.syncToken,headers:y(O,m),fetchOptions:w}),t=e.filter((e=>{var t;const r="caldav"===A.accountType?".ics":".vcf";return(null===(t=e.href)||void 0===t?void 0:t.slice(-4))===r})),l=t.filter((e=>404!==e.status)).map((e=>e.href)),u=t.filter((e=>404===e.status)).map((e=>e.href)),p=(l.length&&null!==(a=await(null===(r=null==f?void 0:f.objectMultiGet)||void 0===r?void 0:r.call(f,{url:f.url,props:{[`${d.DAV}:getetag`]:{},[`${"caldav"===A.accountType?d.CALDAV:d.CARDDAV}:${"caldav"===A.accountType?"calendar-data":"address-data"}`]:{}},objectUrls:l,depth:"1",headers:y(O,m),fetchOptions:w})))&&void 0!==a?a:[]).map((e=>{var t,r,a,s,o,n,c,d,i,l;return{url:null!==(t=e.href)&&void 0!==t?t:"",etag:null===(r=e.props)||void 0===r?void 0:r.getetag,data:"caldav"===(null==A?void 0:A.accountType)?null!==(o=null===(s=null===(a=e.props)||void 0===a?void 0:a.calendarData)||void 0===s?void 0:s._cdata)&&void 0!==o?o:null===(n=e.props)||void 0===n?void 0:n.calendarData:null!==(i=null===(d=null===(c=e.props)||void 0===c?void 0:c.addressData)||void 0===d?void 0:d._cdata)&&void 0!==i?i:null===(l=e.props)||void 0===l?void 0:l.addressData}})),v=null!==(s=f.objects)&&void 0!==s?s:[],C=p.filter((e=>v.every((t=>!h(t.url,e.url))))),D=v.reduce(((e,t)=>{const r=p.find((e=>h(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),b=u.map((e=>({url:e,etag:""}))),V=v.filter((e=>p.some((t=>h(e.url,t.url)&&t.etag===e.etag))));return{...f,objects:g?{created:C,updated:D,deleted:b}:[...V,...C,...D],syncToken:null!==(i=null===(c=null===(n=null===(o=e[0])||void 0===o?void 0:o.raw)||void 0===n?void 0:n.multistatus)||void 0===c?void 0:c.syncToken)&&void 0!==i?i:f.syncToken}}if("basic"===D){const{isDirty:e,newCtag:t}=await _({collection:f,headers:y(O,m),fetchOptions:w}),r=null!==(l=f.objects)&&void 0!==l?l:[],a=null!==(p=await(null===(u=f.fetchObjects)||void 0===u?void 0:u.call(f,{collection:f,headers:y(O,m),fetchOptions:w})))&&void 0!==p?p:[],s=a.filter((e=>r.every((t=>!h(t.url,e.url))))),o=r.reduce(((e,t)=>{const r=a.find((e=>h(e.url,t.url)));return r&&r.etag&&r.etag!==t.etag?[...e,r]:e}),[]),n=r.filter((e=>a.every((t=>!h(t.url,e.url))))),c=r.filter((e=>a.some((t=>h(e.url,t.url)&&t.etag===e.etag))));if(e)return{...f,objects:g?{created:s,updated:o,deleted:n}:[...c,...s,...o],ctag:t}}return g?{...f,objects:{created:[],updated:[],deleted:[]}}:f};var j=Object.freeze({__proto__:null,collectionQuery:T,isCollectionDirty:_,makeCollection:k,smartCollectionSync:L,supportedReportSet:U,syncCollection:R});const x=t("tsdav:addressBook"),S=async e=>{const{url:t,props:r,filters:a,depth:s,headers:o,headersToExclude:c,fetchOptions:i={}}=e;return T({url:t,body:{"addressbook-query":f({_attributes:p([n.CARDDAV,n.DAV]),[`${d.DAV}:prop`]:r,filter:null!=a?a:{"prop-filter":{_attributes:{name:"FN"}}}})},defaultNamespace:d.CARDDAV,depth:s,headers:y(o,c),fetchOptions:i})},N=async e=>{const{url:t,props:r,objectUrls:a,depth:s,headers:o,headersToExclude:c,fetchOptions:i={}}=e;return T({url:t,body:{"addressbook-multiget":f({_attributes:p([n.DAV,n.CARDDAV]),[`${d.DAV}:prop`]:r,[`${d.DAV}:href`]:a})},defaultNamespace:d.CARDDAV,depth:s,headers:y(o,c),fetchOptions:i})},H=async e=>{const{account:t,headers:r,props:a,headersToExclude:s,fetchOptions:o={}}=null!=e?e:{},n=["homeUrl","rootUrl"];if(!t||!V(t,n)){if(!t)throw new Error("no account for fetchAddressBooks");throw new Error(`account must have ${$(t,n)} before fetchAddressBooks`)}const c=await g({url:t.homeUrl,props:null!=a?a:{[`${d.DAV}:displayname`]:{},[`${d.CALENDAR_SERVER}:getctag`]:{},[`${d.DAV}:resourcetype`]:{},[`${d.DAV}:sync-token`]:{}},depth:"1",headers:y(r,s),fetchOptions:o});return Promise.all(c.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("addressbook")})).map((e=>{var r,a,s,o,n,c,d,i,l;const u=null!==(s=null===(a=null===(r=e.props)||void 0===r?void 0:r.displayname)||void 0===a?void 0:a._cdata)&&void 0!==s?s:null===(o=e.props)||void 0===o?void 0:o.displayname;return x(`Found address book named ${"string"==typeof u?u:""},\n             props: ${JSON.stringify(e.props)}`),{url:new URL(null!==(n=e.href)&&void 0!==n?n:"",null!==(c=t.rootUrl)&&void 0!==c?c:"").href,ctag:null===(d=e.props)||void 0===d?void 0:d.getctag,displayName:"string"==typeof u?u:"",resourcetype:Object.keys(null===(i=e.props)||void 0===i?void 0:i.resourcetype),syncToken:null===(l=e.props)||void 0===l?void 0:l.syncToken}})).map((async e=>({...e,reports:await U({collection:e,headers:y(r,s),fetchOptions:o})}))))},P=async e=>{const{addressBook:t,headers:r,objectUrls:a,headersToExclude:s,urlFilter:o=e=>e,useMultiGet:n=!0,fetchOptions:c={}}=e;x(`Fetching vcards from ${null==t?void 0:t.url}`);const i=["url"];if(!t||!V(t,i)){if(!t)throw new Error("cannot fetchVCards for undefined addressBook");throw new Error(`addressBook must have ${$(t,i)} before fetchVCards`)}const l=(null!=a?a:(await S({url:t.url,props:{[`${d.DAV}:getetag`]:{}},depth:"1",headers:y(r,s),fetchOptions:c})).map((e=>{var t;return e.ok&&null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(o).map((e=>new URL(e).pathname));let u=[];return l.length>0&&(u=n?await N({url:t.url,props:{[`${d.DAV}:getetag`]:{},[`${d.CARDDAV}:address-data`]:{}},objectUrls:l,depth:"1",headers:y(r,s),fetchOptions:c}):await S({url:t.url,props:{[`${d.DAV}:getetag`]:{},[`${d.CARDDAV}:address-data`]:{}},depth:"1",headers:y(r,s),fetchOptions:c})),u.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:null===(a=e.props)||void 0===a?void 0:a.getetag,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.addressData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.addressData}}))},B=async e=>{const{addressBook:t,vCardString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return w({url:new URL(a,t.url).href,data:r,headers:y({"content-type":"text/vcard; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},F=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return C({url:t.url,data:t.data,etag:t.etag,headers:y({"content-type":"text/vcard; charset=utf-8",...r},a),fetchOptions:s})},I=async e=>{const{vCard:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return D({url:t.url,etag:t.etag,headers:y(r,a),fetchOptions:s})};var M=Object.freeze({__proto__:null,addressBookMultiGet:N,addressBookQuery:S,createVCard:B,deleteVCard:I,fetchAddressBooks:H,fetchVCards:P,updateVCard:F});const z=t("tsdav:calendar"),Z=async e=>{var t,r,a;const{account:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e,i=["principalUrl","rootUrl"];if(!V(s,i))throw new Error(`account must have ${$(s,i)} before fetchUserAddresses`);z(`Fetch user addresses from ${s.principalUrl}`);const l=(await g({url:s.principalUrl,props:{[`${d.CALDAV}:calendar-user-address-set`]:{}},depth:"0",headers:y(o,n),fetchOptions:c})).find((e=>h(s.principalUrl,e.href)));if(!l||!l.ok)throw new Error("cannot find calendarUserAddresses");const u=(null===(a=null===(r=null===(t=null==l?void 0:l.props)||void 0===t?void 0:t.calendarUserAddressSet)||void 0===r?void 0:r.href)||void 0===a?void 0:a.filter(Boolean))||[];return z(`Fetched calendar user addresses ${u}`),u},G=async e=>{const{url:t,props:r,filters:a,timezone:s,depth:o,headers:c,headersToExclude:i,fetchOptions:l={}}=e;return T({url:t,body:{"calendar-query":f({_attributes:p([n.CALDAV,n.CALENDAR_SERVER,n.CALDAV_APPLE,n.DAV]),[`${d.DAV}:prop`]:r,filter:a,timezone:s})},defaultNamespace:d.CALDAV,depth:o,headers:y(c,i),fetchOptions:l})},Q=async e=>{const{url:t,props:r,objectUrls:a,filters:s,timezone:o,depth:c,headers:i,headersToExclude:l,fetchOptions:u={}}=e;return T({url:t,body:{"calendar-multiget":f({_attributes:p([n.DAV,n.CALDAV]),[`${d.DAV}:prop`]:r,[`${d.DAV}:href`]:a,filter:s,timezone:o})},defaultNamespace:d.CALDAV,depth:c,headers:y(i,l),fetchOptions:u})},q=async e=>{const{url:t,props:r,depth:a,headers:s,headersToExclude:o,fetchOptions:c={}}=e;return A({url:t,init:{method:"MKCALENDAR",headers:y(f({depth:a,...s}),o),namespace:d.DAV,body:{[`${d.CALDAV}:mkcalendar`]:{_attributes:p([n.DAV,n.CALDAV,n.CALDAV_APPLE]),set:{prop:r}}}},fetchOptions:c})},J=async e=>{const{headers:t,account:r,props:a,projectedProps:s,headersToExclude:o,fetchOptions:n={}}=null!=e?e:{},c=["homeUrl","rootUrl"];if(!r||!V(r,c)){if(!r)throw new Error("no account for fetchCalendars");throw new Error(`account must have ${$(r,c)} before fetchCalendars`)}const l=await g({url:r.homeUrl,props:null!=a?a:{[`${d.CALDAV}:calendar-description`]:{},[`${d.CALDAV}:calendar-timezone`]:{},[`${d.DAV}:displayname`]:{},[`${d.CALDAV_APPLE}:calendar-color`]:{},[`${d.CALENDAR_SERVER}:getctag`]:{},[`${d.DAV}:resourcetype`]:{},[`${d.CALDAV}:supported-calendar-component-set`]:{},[`${d.DAV}:sync-token`]:{}},depth:"1",headers:y(t,o),fetchOptions:n});return Promise.all(l.filter((e=>{var t,r;return Object.keys(null!==(r=null===(t=e.props)||void 0===t?void 0:t.resourcetype)&&void 0!==r?r:{}).includes("calendar")})).filter((e=>{var t,r,a,s,o,n;return(Array.isArray(null===(r=null===(t=e.props)||void 0===t?void 0:t.supportedCalendarComponentSet)||void 0===r?void 0:r.comp)?null===(a=e.props)||void 0===a?void 0:a.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.supportedCalendarComponentSet)||void 0===o?void 0:o.comp)||void 0===n?void 0:n._attributes.name]).some((e=>Object.values(i).includes(e)))})).map((e=>{var t,a,o,n,c,d,i,l,u,h,p,f,y,O,m,A;const g=null===(t=e.props)||void 0===t?void 0:t.calendarDescription,w=null===(a=e.props)||void 0===a?void 0:a.calendarTimezone;return{description:"string"==typeof g?g:"",timezone:"string"==typeof w?w:"",url:new URL(null!==(o=e.href)&&void 0!==o?o:"",null!==(n=r.rootUrl)&&void 0!==n?n:"").href,ctag:null===(c=e.props)||void 0===c?void 0:c.getctag,calendarColor:null===(d=e.props)||void 0===d?void 0:d.calendarColor,displayName:null!==(l=null===(i=e.props)||void 0===i?void 0:i.displayname._cdata)&&void 0!==l?l:null===(u=e.props)||void 0===u?void 0:u.displayname,components:Array.isArray(null===(h=e.props)||void 0===h?void 0:h.supportedCalendarComponentSet.comp)?null===(p=e.props)||void 0===p?void 0:p.supportedCalendarComponentSet.comp.map((e=>e._attributes.name)):[null===(y=null===(f=e.props)||void 0===f?void 0:f.supportedCalendarComponentSet.comp)||void 0===y?void 0:y._attributes.name],resourcetype:Object.keys(null===(O=e.props)||void 0===O?void 0:O.resourcetype),syncToken:null===(m=e.props)||void 0===m?void 0:m.syncToken,...v("projectedProps",Object.fromEntries(Object.entries(null!==(A=e.props)&&void 0!==A?A:{}).filter((([e])=>null==s?void 0:s[e]))))}})).map((async e=>({...e,reports:await U({collection:e,headers:y(t,o),fetchOptions:n})}))))},K=async e=>{const{calendar:t,objectUrls:r,filters:a,timeRange:s,headers:o,expand:n,urlFilter:c=e=>Boolean(null==e?void 0:e.includes(".ics")),useMultiGet:i=!0,headersToExclude:l,fetchOptions:u={}}=e;if(s){const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(s.start)&&e.test(s.end)||t.test(s.start)&&t.test(s.end)))throw new Error("invalid timeRange format, not in ISO8601")}z(`Fetching calendar objects from ${null==t?void 0:t.url}`);const h=["url"];if(!t||!V(t,h)){if(!t)throw new Error("cannot fetchCalendarObjects for undefined calendar");throw new Error(`calendar must have ${$(t,h)} before fetchCalendarObjects`)}const p=null!=a?a:[{"comp-filter":{_attributes:{name:"VCALENDAR"},"comp-filter":{_attributes:{name:"VEVENT"},...s?{"time-range":{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}}}],f=(null!=r?r:(await G({url:t.url,props:{[`${d.DAV}:getetag`]:{...n&&s?{[`${d.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:p,depth:"1",headers:y(o,l),fetchOptions:u})).map((e=>{var t;return null!==(t=e.href)&&void 0!==t?t:""}))).map((e=>e.startsWith("http")||!e?e:new URL(e,t.url).href)).filter(c).map((e=>new URL(e).pathname));let v=[];return f.length>0&&(v=!i||n?await G({url:t.url,props:{[`${d.DAV}:getetag`]:{},[`${d.CALDAV}:calendar-data`]:{...n&&s?{[`${d.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},filters:p,depth:"1",headers:y(o,l),fetchOptions:u}):await Q({url:t.url,props:{[`${d.DAV}:getetag`]:{},[`${d.CALDAV}:calendar-data`]:{...n&&s?{[`${d.CALDAV}:expand`]:{_attributes:{start:`${new Date(s.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(s.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}}:{}}},objectUrls:f,depth:"1",headers:y(o,l),fetchOptions:u})),v.map((e=>{var r,a,s,o,n,c;return{url:new URL(null!==(r=e.href)&&void 0!==r?r:"",t.url).href,etag:`${null===(a=e.props)||void 0===a?void 0:a.getetag}`,data:null!==(n=null===(o=null===(s=e.props)||void 0===s?void 0:s.calendarData)||void 0===o?void 0:o._cdata)&&void 0!==n?n:null===(c=e.props)||void 0===c?void 0:c.calendarData}}))},W=async e=>{const{calendar:t,iCalString:r,filename:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e;return w({url:new URL(a,t.url).href,data:r,headers:y({"content-type":"text/calendar; charset=utf-8","If-None-Match":"*",...s},o),fetchOptions:n})},Y=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return C({url:t.url,data:t.data,etag:t.etag,headers:y({"content-type":"text/calendar; charset=utf-8",...r},a),fetchOptions:s})},X=async e=>{const{calendarObject:t,headers:r,headersToExclude:a,fetchOptions:s={}}=e;return D({url:t.url,etag:t.etag,headers:y(r,a),fetchOptions:s})},ee=async e=>{var t;const{oldCalendars:r,account:a,detailedResult:s,headers:o,headersToExclude:n,fetchOptions:c={}}=e;if(!a)throw new Error("Must have account before syncCalendars");const d=null!==(t=null!=r?r:a.calendars)&&void 0!==t?t:[],i=await J({account:a,headers:y(o,n),fetchOptions:c}),l=i.filter((e=>d.every((t=>!h(t.url,e.url)))));z(`new calendars: ${l.map((e=>e.displayName))}`);const u=d.reduce(((e,t)=>{const r=i.find((e=>h(e.url,t.url)));return r&&(r.syncToken&&`${r.syncToken}`!=`${t.syncToken}`||r.ctag&&`${r.ctag}`!=`${t.ctag}`)?[...e,r]:e}),[]);z(`updated calendars: ${u.map((e=>e.displayName))}`);const p=await Promise.all(u.map((async e=>await L({collection:{...e,objectMultiGet:Q},method:"webdav",headers:y(o,n),account:a,fetchOptions:c})))),f=d.filter((e=>i.every((t=>!h(t.url,e.url)))));z(`deleted calendars: ${f.map((e=>e.displayName))}`);const v=d.filter((e=>i.some((t=>h(t.url,e.url)&&(t.syncToken&&`${t.syncToken}`!=`${e.syncToken}`||t.ctag&&`${t.ctag}`!=`${e.ctag}`)))));return s?{created:l,updated:u,deleted:f}:[...v,...l,...p]},te=async e=>{const{url:t,timeRange:r,depth:a,headers:s,headersToExclude:o,fetchOptions:c={}}=e;if(!r)throw new Error("timeRange is required");{const e=/^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$/i,t=/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d+)?(([+-]\d\d:\d\d)|Z)?$/i;if(!(e.test(r.start)&&e.test(r.end)||t.test(r.start)&&t.test(r.end)))throw new Error("invalid timeRange format, not in ISO8601")}return(await T({url:t,body:{"free-busy-query":f({_attributes:p([n.CALDAV]),[`${d.CALDAV}:time-range`]:{_attributes:{start:`${new Date(r.start).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`,end:`${new Date(r.end).toISOString().slice(0,19).replace(/[-:.]/g,"")}Z`}}})},defaultNamespace:d.CALDAV,depth:a,headers:y(s,o),fetchOptions:c}))[0]};var re=Object.freeze({__proto__:null,calendarMultiGet:Q,calendarQuery:G,createCalendarObject:W,deleteCalendarObject:X,fetchCalendarObjects:K,fetchCalendarUserAddresses:Z,fetchCalendars:J,freeBusyQuery:te,makeCalendar:q,syncCalendars:ee,updateCalendarObject:Y});const ae=t("tsdav:account"),se=async e=>{var t,r;ae("Service discovery...");const{account:a,headers:s,headersToExclude:n,fetchOptions:c={}}=e,d=new URL(a.serverUrl),i=new URL(`/.well-known/${a.accountType}`,d);i.protocol=null!==(t=d.protocol)&&void 0!==t?t:"http";try{const e=await o(i.href,{headers:y(s,n),method:"PROPFIND",redirect:"manual",...c});if(e.status>=300&&e.status<400){const t=e.headers.get("Location");if("string"==typeof t&&t.length){ae(`Service discovery redirected to ${t}`);const e=new URL(t,d);return e.hostname===i.hostname&&i.port&&!e.port&&(e.port=i.port),e.protocol=null!==(r=d.protocol)&&void 0!==r?r:"http",e.href}}}catch(e){ae(`Service discovery failed: ${e.stack}`)}return d.href},oe=async e=>{var t,r,a,s,o;const{account:n,headers:c,headersToExclude:i,fetchOptions:l={}}=e,u=["rootUrl"];if(!V(n,u))throw new Error(`account must have ${$(n,u)} before fetchPrincipalUrl`);ae(`Fetching principal url from path ${n.rootUrl}`);const[h]=await g({url:n.rootUrl,props:{[`${d.DAV}:current-user-principal`]:{}},depth:"0",headers:y(c,i),fetchOptions:l});if(!h.ok&&(ae(`Fetch principal url failed: ${h.statusText}`),401===h.status))throw new Error("Invalid credentials");return ae(`Fetched principal url ${null===(r=null===(t=h.props)||void 0===t?void 0:t.currentUserPrincipal)||void 0===r?void 0:r.href}`),new URL(null!==(o=null===(s=null===(a=h.props)||void 0===a?void 0:a.currentUserPrincipal)||void 0===s?void 0:s.href)&&void 0!==o?o:"",n.rootUrl).href},ne=async e=>{var t,r;const{account:a,headers:s,headersToExclude:o,fetchOptions:n={}}=e,c=["principalUrl","rootUrl"];if(!V(a,c))throw new Error(`account must have ${$(a,c)} before fetchHomeUrl`);ae(`Fetch home url from ${a.principalUrl}`);const i=await g({url:a.principalUrl,props:"caldav"===a.accountType?{[`${d.CALDAV}:calendar-home-set`]:{}}:{[`${d.CARDDAV}:addressbook-home-set`]:{}},depth:"0",headers:y(s,o),fetchOptions:n}),l=i.find((e=>h(a.principalUrl,e.href)));if(!l||!l.ok)throw ae(`Fetch home url failed with status ${null==l?void 0:l.statusText} and error ${JSON.stringify(i.map((e=>e.error)))}`),new Error("cannot find homeUrl");const u=new URL("caldav"===a.accountType?null===(t=null==l?void 0:l.props)||void 0===t?void 0:t.calendarHomeSet.href:null===(r=null==l?void 0:l.props)||void 0===r?void 0:r.addressbookHomeSet.href,a.rootUrl).href;return ae(`Fetched home url ${u}`),u},ce=async e=>{const{account:t,headers:r,loadCollections:a=!1,loadObjects:s=!1,headersToExclude:o,fetchOptions:n={}}=e,c={...t};return c.rootUrl=await se({account:t,headers:y(r,o),fetchOptions:n}),c.principalUrl=await oe({account:c,headers:y(r,o),fetchOptions:n}),c.homeUrl=await ne({account:c,headers:y(r,o),fetchOptions:n}),(a||s)&&("caldav"===t.accountType?c.calendars=await J({headers:y(r,o),account:c,fetchOptions:n}):"carddav"===t.accountType&&(c.addressBooks=await H({headers:y(r,o),account:c,fetchOptions:n}))),s&&("caldav"===t.accountType&&c.calendars?c.calendars=await Promise.all(c.calendars.map((async e=>({...e,objects:await K({calendar:e,headers:y(r,o),fetchOptions:n})})))):"carddav"===t.accountType&&c.addressBooks&&(c.addressBooks=await Promise.all(c.addressBooks.map((async e=>({...e,objects:await P({addressBook:e,headers:y(r,o),fetchOptions:n})})))))),c};var de=Object.freeze({__proto__:null,createAccount:ce,fetchHomeUrl:ne,fetchPrincipalUrl:oe,serviceDiscovery:se});const ie=t("tsdav:authHelper"),le=(e,t)=>(...r)=>e({...t,...r[0]}),ue=e=>(ie(`Basic auth token generated: ${a(`${e.username}:${e.password}`)}`),{authorization:`Basic ${a(`${e.username}:${e.password}`)}`}),he=async(e,t)=>{const r=["authorizationCode","redirectUrl","clientId","clientSecret","tokenUrl"];if(!V(e,r))throw new Error(`Oauth credentials missing: ${$(e,r)}`);const a=new URLSearchParams({grant_type:"authorization_code",code:e.authorizationCode,redirect_uri:e.redirectUrl,client_id:e.clientId,client_secret:e.clientSecret});ie(e.tokenUrl),ie(a.toString());const s=await o(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"content-length":`${a.toString().length}`,"content-type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return ie(`Fetch Oauth tokens failed: ${await s.text()}`),{}},pe=async(e,t)=>{const r=["refreshToken","clientId","clientSecret","tokenUrl"];if(!V(e,r))throw new Error(`Oauth credentials missing: ${$(e,r)}`);const a=new URLSearchParams({client_id:e.clientId,client_secret:e.clientSecret,refresh_token:e.refreshToken,grant_type:"refresh_token"}),s=await o(e.tokenUrl,{method:"POST",body:a.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"},...null!=t?t:{}});if(s.ok){return await s.json()}return ie(`Refresh access token failed: ${await s.text()}`),{}},fe=async(e,t)=>{var r;ie("Fetching oauth headers");let a={};return e.refreshToken?(e.refreshToken&&!e.accessToken||Date.now()>(null!==(r=e.expiration)&&void 0!==r?r:0))&&(a=await pe(e,t)):a=await he(e,t),ie(`Oauth tokens fetched: ${a.access_token}`),{tokens:a,headers:{authorization:`Bearer ${a.access_token}`}}};var ve=Object.freeze({__proto__:null,defaultParam:le,fetchOauthTokens:he,getBasicAuthHeaders:ue,getOauthHeaders:fe,refreshAccessToken:pe});const ye=async e=>{var t;const{serverUrl:r,credentials:a,authMethod:o,defaultAccountType:n,authFunction:c,overrideFetch:d}=e;void 0!==d&&(s=d);let i={};switch(o){case"Basic":i=ue(a);break;case"Oauth":i=(await fe(a)).headers;break;case"Digest":i={Authorization:`Digest ${a.digestString}`};break;case"Custom":i=null!==(t=await(null==c?void 0:c(a)))&&void 0!==t?t:{};break;default:throw new Error("Invalid auth method")}const l=n?await ce({account:{serverUrl:r,credentials:a,accountType:n},headers:i}):void 0,u=le(w,{url:r,headers:i}),h=le(C,{headers:i,url:r}),p=le(D,{headers:i,url:r}),f=le(g,{headers:i}),v=le(T,{headers:i}),y=le(k,{headers:i}),O=le(R,{headers:i}),m=le(U,{headers:i}),b=le(_,{headers:i}),V=le(L,{headers:i,account:l}),$=le(G,{headers:i}),E=le(Q,{headers:i}),j=le(q,{headers:i}),x=le(J,{headers:i,account:l}),M=le(Z,{headers:i,account:l}),z=le(K,{headers:i}),te=le(W,{headers:i}),re=le(Y,{headers:i}),ae=le(X,{headers:i}),se=le(ee,{account:l,headers:i}),oe=le(S,{headers:i}),ne=le(N,{headers:i});return{davRequest:async e=>{const{init:t,...r}=e,{headers:a,...s}=t;return A({...r,init:{...s,headers:{...i,...a}}})},propfind:f,createAccount:async e=>{const{account:t,headers:s,loadCollections:o,loadObjects:n}=e;return ce({account:{serverUrl:r,credentials:a,...t},headers:{...i,...s},loadCollections:o,loadObjects:n})},createObject:u,updateObject:h,deleteObject:p,calendarQuery:$,addressBookQuery:oe,collectionQuery:v,makeCollection:y,calendarMultiGet:E,makeCalendar:j,syncCollection:O,supportedReportSet:m,isCollectionDirty:b,smartCollectionSync:V,fetchCalendars:x,fetchCalendarUserAddresses:M,fetchCalendarObjects:z,createCalendarObject:te,updateCalendarObject:re,deleteCalendarObject:ae,syncCalendars:se,fetchAddressBooks:le(H,{account:l,headers:i}),addressBookMultiGet:ne,fetchVCards:le(P,{headers:i}),createVCard:le(B,{headers:i}),updateVCard:le(F,{headers:i}),deleteVCard:le(I,{headers:i})}};class Oe{constructor(e){var t,r,a;this.serverUrl=e.serverUrl,this.credentials=e.credentials,this.authMethod=null!==(t=e.authMethod)&&void 0!==t?t:"Basic",this.accountType=null!==(r=e.defaultAccountType)&&void 0!==r?r:"caldav",this.authFunction=e.authFunction,this.fetchOptions=null!==(a=e.fetchOptions)&&void 0!==a?a:{}}async login(){var e;switch(this.authMethod){case"Basic":this.authHeaders=ue(this.credentials);break;case"Oauth":this.authHeaders=(await fe(this.credentials,this.fetchOptions)).headers;break;case"Digest":this.authHeaders={Authorization:`Digest ${this.credentials.digestString}`};break;case"Custom":this.authHeaders=await(null===(e=this.authFunction)||void 0===e?void 0:e.call(this,this.credentials));break;default:throw new Error("Invalid auth method")}this.account=this.accountType?await ce({account:{serverUrl:this.serverUrl,credentials:this.credentials,accountType:this.accountType},headers:this.authHeaders,fetchOptions:this.fetchOptions}):void 0}async davRequest(e){const{init:t,...r}=e,{headers:a,...s}=t;return A({...r,init:{...s,headers:{...this.authHeaders,...a}},fetchOptions:this.fetchOptions})}async createObject(...e){return le(w,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateObject(...e){return le(C,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteObject(...e){return le(D,{url:this.serverUrl,headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async propfind(...e){return le(g,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createAccount(e){const{account:t,headers:r,loadCollections:a,loadObjects:s,fetchOptions:o}=e;return ce({account:{serverUrl:this.serverUrl,credentials:this.credentials,...t},headers:{...this.authHeaders,...r},loadCollections:a,loadObjects:s,fetchOptions:null!=o?o:this.fetchOptions})}async collectionQuery(...e){return le(T,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCollection(...e){return le(k,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCollection(...e){return le(R,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async supportedReportSet(...e){return le(U,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async isCollectionDirty(...e){return le(_,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async smartCollectionSync(...e){return le(L,{headers:this.authHeaders,fetchOptions:this.fetchOptions,account:this.account})(e[0])}async calendarQuery(...e){return le(G,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async makeCalendar(...e){return le(q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async calendarMultiGet(...e){return le(Q,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchCalendars(...e){return le(J,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarUserAddresses(...e){return le(Z,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchCalendarObjects(...e){return le(K,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createCalendarObject(...e){return le(W,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateCalendarObject(...e){return le(Y,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteCalendarObject(...e){return le(X,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async syncCalendars(...e){return le(ee,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(e[0])}async addressBookQuery(...e){return le(S,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async addressBookMultiGet(...e){return le(N,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async fetchAddressBooks(...e){return le(H,{headers:this.authHeaders,account:this.account,fetchOptions:this.fetchOptions})(null==e?void 0:e[0])}async fetchVCards(...e){return le(P,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async createVCard(...e){return le(B,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async updateVCard(...e){return le(F,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}async deleteVCard(...e){return le(I,{headers:this.authHeaders,fetchOptions:this.fetchOptions})(e[0])}}var me={DAVNamespace:n,DAVNamespaceShort:d,DAVAttributeMap:c,...Object.freeze({__proto__:null,DAVClient:Oe,createDAVClient:ye}),...b,...j,...de,...M,...re,...ve,...O};export{c as DAVAttributeMap,Oe as DAVClient,n as DAVNamespace,d as DAVNamespaceShort,N as addressBookMultiGet,S as addressBookQuery,Q as calendarMultiGet,G as calendarQuery,f as cleanupFalsy,T as collectionQuery,ce as createAccount,W as createCalendarObject,ye as createDAVClient,w as createObject,B as createVCard,A as davRequest,me as default,X as deleteCalendarObject,D as deleteObject,I as deleteVCard,H as fetchAddressBooks,K as fetchCalendarObjects,Z as fetchCalendarUserAddresses,J as fetchCalendars,he as fetchOauthTokens,P as fetchVCards,te as freeBusyQuery,ue as getBasicAuthHeaders,p as getDAVAttribute,fe as getOauthHeaders,_ as isCollectionDirty,q as makeCalendar,g as propfind,pe as refreshAccessToken,L as smartCollectionSync,U as supportedReportSet,ee as syncCalendars,R as syncCollection,Y as updateCalendarObject,C as updateObject,F as updateVCard,h as urlContains,u as urlEquals};
